import{u as r,b8 as u,b9 as n,ba as c,aD as t,m as l,bb as o,bc as d,bd as y,be as C,bf as m,bg as f}from"./index-e2557835.js";function v(){const a=r(),s=u();return n({mutationFn:e=>c(e),onMutate:()=>{console.log("mutate")},onSettled:async(e,i)=>{i?(console.log(i),t.error(i.message)):(t.success("Car Created successfully"),a.push(l),await s.invalidateQueries({queryKey:["getCars"]}))}})}function S(){const a=r(),s=u();return n({mutationFn:e=>o(e),onMutate:()=>{console.log("mutate")},onSettled:async(e,i)=>{i?t.error(i.message):(t.success("Car Updated successfully"),a.push(l),await s.invalidateQueries({queryKey:["getCars"]}))}})}function q(){const a=u();return n({mutationFn:s=>d(s),onMutate:()=>{console.log("mutate")},onSettled:async(s,e)=>{e?t.error(e.message):(t.success("Service Updated successfully"),await a.invalidateQueries({queryKey:["getCarsByid"]}))}})}function b(){const a=u();return n({mutationFn:s=>y(s),onMutate:()=>{console.log("mutate")},onSettled:async(s,e)=>{e?t.error(e.message):(t.success("Service deleted successfully"),await a.invalidateQueries({queryKey:["getCarsByid"]}))}})}function D(){const a=u();return n({mutationFn:s=>C(s),onMutate:()=>{console.log("mutate")},onSettled:async(s,e)=>{e?t.error(e.message):(t.success("Car Updated successfully"),await a.invalidateQueries({queryKey:["getCarsServiceOverDue"]}))}})}function M(){const a=u();return n({mutationFn:s=>m(s),onMutate:()=>{console.log("mutate")},onSettled:async(s,e)=>{e?t.error(e.message):(t.success("Car Deleted successfully"),await a.invalidateQueries({queryKey:["getCars"]}))}})}function p(){const a=u();return n({mutationFn:s=>f(s),onMutate:()=>{console.log("mutate")},onSettled:async(s,e)=>{e?t.error(e.message):(t.success("Cars Deleted successfully"),await a.invalidateQueries({queryKey:["getCars"]}))}})}export{b as a,p as b,M as c,D as d,v as e,S as f,q as u};
